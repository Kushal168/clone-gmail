{"version":3,"file":"static/js/870.53a23103.chunk.js","mappings":"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","sources":["components/Email.jsx","components/common/NoMails.jsx","components/Emails.jsx","constants/constant.js","services/api.js","hooks/useApi.js","services/api_urls.js"],"sourcesContent":["// import React from 'react'\r\nimport { Box, Checkbox, Typography } from '@mui/material'\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {routes} from '../routes/routes'\r\nimport styled from '@emotion/styled';\r\nimport useApi from '../hooks/useApi';\r\nimport { API_URLS } from '../services/api_urls';\r\n\r\nconst Wrapper = styled(Box)({\r\n\r\n    padding:' 0 0 0 10px',\r\n    background: '#f2f6fc',\r\n    cursor: 'pointer',\r\n    display: 'flex',\r\n    alignItems: 'center ',\r\n    ' & > div': {\r\n        display: 'flex',\r\n        width:' 100%',\r\n       ' & > div > p':{\r\n        fontSize: '14px',\r\n        }\r\n    }\r\n})\r\n\r\n\r\nconst Indicator = styled(Typography)({\r\n    fontSize: '12px',\r\n    background: '#ddd',\r\n    color: '#222',\r\n    borderRadius: '4px',\r\n    marginRight: '6px',\r\n    padding: '0 4px',\r\n});\r\n\r\nconst Date = styled(Typography)({\r\n    marginLeft: 'auto',\r\n    marginRight: 20,\r\n    fontSize: 12,\r\n    color: '#5F6368'\r\n});\r\n\r\n\r\nconst Email = ({email,selectedEmails,setStarredEmail,setSelectedEmails}) => {\r\n    const toggleStarredEmailService  = useApi(API_URLS.toggleStarredMails);\r\n    \r\n    const navigate = useNavigate();\r\n\r\n    const toggleStarredEmail = () => {\r\n        toggleStarredEmailService.call({ id: email._id, value: !email.starred });\r\n        setStarredEmail(prevState => !prevState);\r\n    }\r\n\r\n    const onValueChange = () => {\r\n        if (selectedEmails.includes(email._id)) {\r\n            setSelectedEmails(prevState => prevState.filter(id => id !== email._id));\r\n        } else {\r\n            setSelectedEmails(prevState => [...prevState, email._id]);\r\n        } \r\n    }\r\n    \r\n  return (\r\n   \r\n    <Wrapper>\r\n        <Checkbox \r\n        size=\"small\" \r\n        checked = {selectedEmails.includes(email._id)}\r\n        onChange={()=>onValueChange()}\r\n        \r\n        />\r\n           { \r\n                email.starred ? \r\n                    <StarIcon fontSize=\"small\" style={{ marginRight: 10, color:'#FFF200'}}  onClick={() => toggleStarredEmail()} />\r\n                : \r\n                    <StarBorderIcon fontSize=\"small\" style={{ marginRight: 10 }} onClick={() => toggleStarredEmail()} /> \r\n            } \r\n        {/* <StarBorderIcon  fontSize=\"small\" style={{ marginRight: 10 }}/> */}\r\n        <Box  onClick={() => navigate(routes.view.path, { state: { email: email }})}>\r\n\r\n        <Typography style={{width:200, overflow: 'hidden'}} >{email.name}</Typography>\r\n        <Indicator>Inbox</Indicator>\r\n        <Typography>{email.subject} {email.body && '-'} {email.body}</Typography>\r\n\r\n        <Date>\r\n            {(new window.Date(email.date)).getDate()}&nbsp;\r\n            {(new window.Date(email.date)).toLocaleString('default', { month: 'long' })}\r\n        </Date>\r\n        </Box>\r\n    </Wrapper>\r\n  )\r\n}\r\nexport default Email;\r\n","import { Box, Typography, styled, Divider } from '@mui/material';\r\n\r\nconst Component = styled(Box)({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    marginTop: 50,\r\n    opacity: '1'\r\n});\r\n \r\nconst StyledDivider = styled(Divider)({\r\n    width: '100%',\r\n    marginTop: 10\r\n})\r\n\r\nconst NoMails = ({ message }) => {\r\n    return (\r\n        <Component>\r\n            <Typography>{message.heading}</Typography>\r\n            <Typography>{message.subHeading}</Typography>\r\n            <StyledDivider />\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default NoMails;\r\n","// import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useOutletContext, useParams } from 'react-router-dom';\r\nimport { API_URLS } from '../services/api_urls';\r\nimport useApi from '../hooks/useApi';\r\nimport Email from './Email';\r\nimport {Checkbox,Box} from '@mui/material/';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport NoMails from './common/NoMails';\r\nimport { EMPTY_TABS } from '../constants/constant';\r\n\r\n\r\n\r\nconst Emails = () => {\r\n  const [selectedEmails, setSelectedEmails] = useState([]);\r\n  const [starredEmail, setStarredEmail] = useState(false);\r\n\r\n\r\n    const {openDrawer} = useOutletContext();\r\n    const { type } = useParams();\r\n\r\n    const getEmailsService = useApi(API_URLS.getEmailFromType);\r\n    const deleteEmailsService = useApi(API_URLS.deleteEmails);\r\n    const moveEmailsToBin = useApi(API_URLS.moveEmailsToBin);\r\n     \r\n    useEffect(()=>{ \r\n      getEmailsService.call({},type);\r\n    },[type,starredEmail])\r\n\r\n    const selectAllEmails = (e) => {\r\n      if (e.target.checked) {\r\n          const emails = getEmailsService?.response?.map(email => email._id);\r\n          setSelectedEmails(emails);\r\n      } else {\r\n          setSelectedEmails([]);\r\n      }\r\n  }\r\n  const deleteSelectedEmails = () => {\r\n    if (type === 'bin') {\r\n        deleteEmailsService.call(selectedEmails);\r\n    } else {\r\n        moveEmailsToBin.call(selectedEmails);\r\n    }\r\n    setStarredEmail(prevState => !prevState);\r\n}\r\n  return (\r\n    // <div style={openDrawer ? { marginLeft: 250, width: '100%' } : { width: '100%' } }>\r\n    //    hello from Email\r\n    //   </div>\r\n     <Box style={openDrawer ? {marginLeft: 250, width: 'calc(100%-250px)'}: {width:'100%'}} > \r\n      <Box style={{ padding: '20px 10px 0 10px', display: 'flex', alignItems: 'center' }}>\r\n    <Checkbox size=\"small\" onChange={(e) => selectAllEmails(e)}/>\r\n    <DeleteOutlineIcon onClick={(e) => deleteSelectedEmails(e)}/>\r\n      </Box>\r\n\r\n     <List >\r\n     {\r\n                    getEmailsService?.response?.map(email => (\r\n                        <Email \r\n                            email={email} \r\n                            key={email._id}\r\n                            setStarredEmail={setStarredEmail}  // setrefreshscreen\r\n                            selectedEmails={selectedEmails}\r\n                            setSelectedEmails={setSelectedEmails}\r\n                        /> \r\n                    ))\r\n                }\r\n\r\n     </List>\r\n     {\r\n           getEmailsService?.response?.length === 0 &&\r\n           <NoMails message={EMPTY_TABS[type]} />\r\n  \r\n     }\r\n    </Box> \r\n    )\r\n}\r\n\r\nexport default Emails","export const gmailLogo = 'https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x_r5.png';\r\n// export const emptyInbox = 'https://miro.medium.com/max/1088/1*DhOnyEHovQZ31rH00-VUDw.png';\r\nexport const emptyProfilePic = 'https://ssl.gstatic.com/ui/v1/icons/mail/profile_mask2.png';\r\n\r\n// export const VIEWS = {\r\n//     inbox: 'inbox',\r\n//     starred: 'starred',\r\n//     sent: 'sent',\r\n//     drafts: 'drafts'\r\n// }\r\n\r\nexport const EMPTY_TABS = {\r\n    inbox: {\r\n        heading: 'Your inbox is empty',\r\n        subHeading: \"Mails that don't appear in other tabs will be shown here.\"\r\n    },\r\n    drafts: {\r\n        heading: \"You don't have any saved drafts.\",\r\n        subHeading: \"Saving a draft allows you to keep a message you aren't ready to send yet.\"\r\n    },\r\n    starred: {\r\n        heading: 'No starred messages',\r\n        subHeading: \"Stars let you give messages a special status to make them easier to find. To star a message, click on the star outline beside any message or conversation.\"\r\n    },\r\n    sent: {\r\n        heading: 'No sent messages!',\r\n        subHeading: 'Send one now!'\r\n    },\r\n    bin: {\r\n        heading: 'No conversations in Bin.',\r\n        subHeading: ''\r\n    }\r\n}","\r\nimport axios from 'axios';\r\n\r\nconst API_URI = ''\r\n\r\nconst API_GMAIL = async (UrlObject, payload, type) => {\r\n    // const { params, urlParams, ...body } = requestData;\r\n\r\n    return await axios({\r\n        method: UrlObject.method,\r\n        // url: `${API_URI}/${UrlObject.endpoint}`,\r\n        url: `${API_URI}/${UrlObject.endpoint}/${type}`,\r\n        data: payload\r\n    })\r\n}\r\n// const API_GMAIL = async (UrlObject, requestData = {}, type) => {\r\n//     const { params, urlParams, ...body } = requestData;\r\n\r\n//     return await axios({\r\n//         method: UrlObject.method,\r\n//         url: `${API_URI}/${UrlObject.endpoint}/${type}`,\r\n//         data: requestData\r\n//     })\r\n// }\r\n\r\nexport default API_GMAIL;","import { useState } from 'react';\r\nimport API from '../services/api';\r\n\r\nconst useApi = (urlObject,type='') => {\r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const call = async (payload, type = '') => {\r\n    // const call = async (payload) => {\r\n        setResponse(null);\r\n        setError(\"\");\r\n        setIsLoading(true);\r\n        \r\n        try {\r\n            // let res = await API(urlObject, payload);\r\n            let res = await API(urlObject, payload, type);\r\n            setResponse(res.data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return { call, response, error, isLoading };\r\n}\r\n\r\nexport default useApi;","// configuration of all mails\r\nexport const API_URLS = {\r\n    saveSentEmails: {\r\n        endpoint: 'save',\r\n        method: 'POST'\r\n    },\r\n    saveDraftEmails: {\r\n        endpoint: 'save-draft',\r\n        method: 'POST'\r\n    },\r\n    getEmailFromType: {\r\n        endpoint: 'emails',\r\n        method: 'GET'\r\n    },\r\n    toggleStarredMails: {\r\n        endpoint: 'starred',\r\n        method: 'POST'\r\n    },\r\n    deleteEmails: {\r\n        endpoint: 'delete',\r\n        method: 'DELETE'\r\n    },\r\n    moveEmailsToBin: {\r\n        endpoint: 'bin',\r\n        method: 'POST'\r\n    } \r\n}"],"names":["Wrapper","styled","Box","padding","background","cursor","display","alignItems","width","fontSize","Indicator","Typography","color","borderRadius","marginRight","Date","marginLeft","_ref","email","selectedEmails","setStarredEmail","setSelectedEmails","toggleStarredEmailService","useApi","API_URLS","toggleStarredMails","navigate","useNavigate","toggleStarredEmail","call","id","_id","value","starred","prevState","_jsxs","children","_jsx","Checkbox","size","checked","includes","onChange","filter","concat","_toConsumableArray","StarIcon","style","onClick","StarBorderIcon","routes","view","path","state","overflow","name","subject","body","window","date","getDate","toLocaleString","month","Component","flexDirection","marginTop","opacity","StyledDivider","Divider","message","heading","subHeading","_getEmailsService$res2","_getEmailsService$res3","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","starredEmail","openDrawer","useOutletContext","type","useParams","getEmailsService","getEmailFromType","deleteEmailsService","deleteEmails","moveEmailsToBin","useEffect","e","target","_getEmailsService$res","emails","response","map","selectAllEmails","DeleteOutlineIcon","List","Email","length","NoMails","EMPTY_TABS","gmailLogo","emptyProfilePic","inbox","drafts","sent","bin","API_GMAIL","_asyncToGenerator","_regeneratorRuntime","mark","_callee","UrlObject","payload","wrap","_context","prev","next","axios","method","url","endpoint","data","abrupt","stop","_x","_x2","_x3","apply","arguments","urlObject","setResponse","error","setError","_useState5","_useState6","isLoading","setIsLoading","res","_args","undefined","API","t0","finish","saveSentEmails","saveDraftEmails"],"sourceRoot":""}